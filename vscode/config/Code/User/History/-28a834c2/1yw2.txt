$ gdbus introspect --system --dest org.freedesktop.systemd1 --object-path /org/freedesktop/systemd1
node /org/freedesktop/systemd1 {
  interface org.freedesktop.DBus.Peer {
    methods:
      Ping();
      GetMachineId(out s machine_uuid);
    signals:
    properties:
  };
  interface org.freedesktop.DBus.Introspectable {
    methods:
      Introspect(out s xml_data);
    signals:
    properties:
  };
  interface org.freedesktop.DBus.Properties {
    methods:
      Get(in  s interface_name,
          in  s property_name,
          out v value);
      GetAll(in  s interface_name,
             out a{sv} props);
      Set(in  s interface_name,
          in  s property_name,
          in  v value);
    signals:
      PropertiesChanged(s interface_name,
                        a{sv} changed_properties,
                        as invalidated_properties);
    properties:
  };
  interface org.freedesktop.systemd1.Manager {
    methods:
      GetUnit(in  s name,
              out o unit);
      GetUnitByPID(in  u pid,
                   out o unit);
      GetUnitByInvocationID(in  ay invocation_id,
                            out o unit);
      GetUnitByControlGroup(in  s cgroup,
                            out o unit);
      GetUnitByPIDFD(in  h pidfd,
                     out o unit,
                     out s unit_id,
                     out ay invocation_id);
      LoadUnit(in  s name,
               out o unit);
      StartUnit(in  s name,
                in  s mode,
                out o job);
      StartUnitWithFlags(in  s name,
                         in  s mode,
                         in  t flags,
                         out o job);
      StartUnitReplace(in  s old_unit,
                       in  s new_unit,
                       in  s mode,
                       out o job);
      StopUnit(in  s name,
               in  s mode,
               out o job);
      ReloadUnit(in  s name,
                 in  s mode,
                 out o job);
      RestartUnit(in  s name,
                  in  s mode,
                  out o job);
      TryRestartUnit(in  s name,
                     in  s mode,
                     out o job);
      ReloadOrRestartUnit(in  s name,
                          in  s mode,
                          out o job);
      ReloadOrTryRestartUnit(in  s name,
                             in  s mode,
                             out o job);
      EnqueueUnitJob(in  s name,
                     in  s job_type,
                     in  s job_mode,
                     out u job_id,
                     out o job_path,
                     out s unit_id,
                     out o unit_path,
                     out s job_type,
                     out a(uosos) affected_jobs);
      KillUnit(in  s name,
               in  s whom,
               in  i signal);
      CleanUnit(in  s name,
                in  as mask);
      FreezeUnit(in  s name);
      ThawUnit(in  s name);
      ResetFailedUnit(in  s name);
      SetUnitProperties(in  s name,
                        in  b runtime,
                        in  a(sv) properties);
      BindMountUnit(in  s name,
                    in  s source,
                    in  s destination,
                    in  b read_only,
                    in  b mkdir);
      MountImageUnit(in  s name,
                     in  s source,
                     in  s destination,
                     in  b read_only,
                     in  b mkdir,
                     in  a(ss) options);
      RefUnit(in  s name);
      UnrefUnit(in  s name);
      StartTransientUnit(in  s name,
                         in  s mode,
                         in  a(sv) properties,
                         in  a(sa(sv)) aux,
                         out o job);
      GetUnitProcesses(in  s name,
                       out a(sus) processes);
      AttachProcessesToUnit(in  s unit_name,
                            in  s subcgroup,
                            in  au pids);
      AbandonScope(in  s name);
      GetJob(in  u id,
             out o job);
      GetJobAfter(in  u id,
                  out a(usssoo) jobs);
      GetJobBefore(in  u id,
                   out a(usssoo) jobs);
      CancelJob(in  u id);
      ClearJobs();
      ResetFailed();
      SetShowStatus(in  s mode);
      ListUnits(out a(ssssssouso) units);
      ListUnitsFiltered(in  as states,
                        out a(ssssssouso) units);
      ListUnitsByPatterns(in  as states,
                          in  as patterns,
                          out a(ssssssouso) units);
      ListUnitsByNames(in  as names,
                       out a(ssssssouso) units);
      ListJobs(out a(usssoo) jobs);
      Subscribe();
      Unsubscribe();
      Dump(out s output);
      DumpUnitsMatchingPatterns(in  as patterns,
                                out s output);
      DumpByFileDescriptor(out h fd);
      DumpUnitsMatchingPatternsByFileDescriptor(in  as patterns,
                                                out h fd);
      Reload();
      @org.freedesktop.DBus.Method.NoReply("true")
      Reexecute();
      @org.freedesktop.systemd1.Privileged("true")
      Exit();
      @org.freedesktop.systemd1.Privileged("true")
      Reboot();
      @org.freedesktop.systemd1.Privileged("true")
      PowerOff();
      @org.freedesktop.systemd1.Privileged("true")
      Halt();
      @org.freedesktop.systemd1.Privileged("true")
      KExec();
      @org.freedesktop.systemd1.Privileged("true")
      SwitchRoot(in  s new_root,
                 in  s init);
      SetEnvironment(in  as assignments);
      UnsetEnvironment(in  as names);
      UnsetAndSetEnvironment(in  as names,
                             in  as assignments);
      EnqueueMarkedJobs(out ao jobs);
      ListUnitFiles(out a(ss) unit_files);
      ListUnitFilesByPatterns(in  as states,
                              in  as patterns,
                              out a(ss) unit_files);
      GetUnitFileState(in  s file,
                       out s state);
      EnableUnitFiles(in  as files,
                      in  b runtime,
                      in  b force,
                      out b carries_install_info,
                      out a(sss) changes);
      DisableUnitFiles(in  as files,
                       in  b runtime,
                       out a(sss) changes);
      EnableUnitFilesWithFlags(in  as files,
                               in  t flags,
                               out b carries_install_info,
                               out a(sss) changes);
      DisableUnitFilesWithFlags(in  as files,
                                in  t flags,
                                out a(sss) changes);
      DisableUnitFilesWithFlagsAndInstallInfo(in  as files,
                                              in  t flags,
                                              out b carries_install_info,
                                              out a(sss) changes);
      ReenableUnitFiles(in  as files,
                        in  b runtime,
                        in  b force,
                        out b carries_install_info,
                        out a(sss) changes);
      LinkUnitFiles(in  as files,
                    in  b runtime,
                    in  b force,
                    out a(sss) changes);
      PresetUnitFiles(in  as files,
                      in  b runtime,
                      in  b force,
                      out b carries_install_info,
                      out a(sss) changes);
      PresetUnitFilesWithMode(in  as files,
                              in  s mode,
                              in  b runtime,
                              in  b force,
                              out b carries_install_info,
                              out a(sss) changes);
      MaskUnitFiles(in  as files,
                    in  b runtime,
                    in  b force,
                    out a(sss) changes);
      UnmaskUnitFiles(in  as files,
                      in  b runtime,
                      out a(sss) changes);
      RevertUnitFiles(in  as files,
                      out a(sss) changes);
      SetDefaultTarget(in  s name,
                       in  b force,
                       out a(sss) changes);
      GetDefaultTarget(out s name);
      PresetAllUnitFiles(in  s mode,
                         in  b runtime,
                         in  b force,
                         out a(sss) changes);
      AddDependencyUnitFiles(in  as files,
                             in  s target,
                             in  s type,
                             in  b runtime,
                             in  b force,
                             out a(sss) changes);
      GetUnitFileLinks(in  s name,
                       in  b runtime,
                       out as links);
      SetExitCode(in  y number);
      LookupDynamicUserByName(in  s name,
                              out u uid);
      LookupDynamicUserByUID(in  u uid,
                             out s name);
      GetDynamicUsers(out a(us) users);
    signals:
      UnitNew(s id,
              o unit);
      UnitRemoved(s id,
                  o unit);
      JobNew(u id,
             o job,
             s unit);
      JobRemoved(u id,
                 o job,
                 s unit,
                 s result);
      StartupFinished(t firmware,
                      t loader,
                      t kernel,
                      t initrd,
                      t userspace,
                      t total);
      UnitFilesChanged();
      Reloading(b active);
    properties:
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s Version = '253.7-1.fc38';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s Features = '+PAM +AUDIT +SELINUX -APPARMOR +IMA +SMACK +SECCOMP -GCRYPT +GNUTLS +OPENSSL +ACL +BLKID +CURL +ELFUTILS +FIDO2 +IDN2 -IDN -IPTC +KMOD +LIBCRYPTSETUP +LIBFDISK +PCRE2 +PWQUALITY +P11KIT +QRENCODE +TPM2 +BZIP2 +LZ4 +XZ +ZLIB +ZSTD +BPF_FRAMEWORK +XKBCOMMON +UTMP +SYSVINIT default-hierarchy=unified';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s Virtualization = '';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s Architecture = 'x86-64';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s Tainted = 'local-hwclock';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t FirmwareTimestamp = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t FirmwareTimestampMonotonic = 11850630;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t LoaderTimestamp = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t LoaderTimestampMonotonic = 3808518;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t KernelTimestamp = 1691017104755932;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t KernelTimestampMonotonic = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDTimestamp = 1691017106445736;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDTimestampMonotonic = 1689804;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t UserspaceTimestamp = 1691017110366875;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t UserspaceTimestampMonotonic = 5610943;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t FinishTimestamp = 1691027921665537;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t FinishTimestampMonotonic = 16909605;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t SecurityStartTimestamp = 1691017110370208;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t SecurityStartTimestampMonotonic = 5614275;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t SecurityFinishTimestamp = 1691017110435454;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t SecurityFinishTimestampMonotonic = 5679522;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t GeneratorsStartTimestamp = 1691027910786650;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t GeneratorsStartTimestampMonotonic = 6030717;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t GeneratorsFinishTimestamp = 1691027910899084;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t GeneratorsFinishTimestampMonotonic = 6143153;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t UnitsLoadStartTimestamp = 1691027910899090;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t UnitsLoadStartTimestampMonotonic = 6143158;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t UnitsLoadFinishTimestamp = 1691027911007087;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t UnitsLoadFinishTimestampMonotonic = 6251154;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t UnitsLoadTimestamp = 1691017110238483;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t UnitsLoadTimestampMonotonic = 5482551;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDSecurityStartTimestamp = 1691017106445993;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDSecurityStartTimestampMonotonic = 1690061;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDSecurityFinishTimestamp = 1691017106446011;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDSecurityFinishTimestampMonotonic = 1690079;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDGeneratorsStartTimestamp = 1691017106535558;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDGeneratorsStartTimestampMonotonic = 1779625;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDGeneratorsFinishTimestamp = 1691017106560256;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDGeneratorsFinishTimestampMonotonic = 1804325;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDUnitsLoadStartTimestamp = 1691017106560273;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDUnitsLoadStartTimestampMonotonic = 1804341;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDUnitsLoadFinishTimestamp = 1691017106562680;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t InitRDUnitsLoadFinishTimestampMonotonic = 1806748;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      @org.freedesktop.systemd1.Privileged("true")
      readwrite s LogLevel = 'info';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      @org.freedesktop.systemd1.Privileged("true")
      readwrite s LogTarget = 'journal-or-kmsg';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly u NNames = 544;
      readonly u NFailedUnits = 1;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly u NJobs = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly u NInstalledJobs = 373;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly u NFailedJobs = 3;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly d Progress = 1.0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly as Environment = ['LANG=en_GB.UTF-8', 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin', 'XDG_DATA_DIRS=/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/'];
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly b ConfirmSpawn = false;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly b ShowStatus = false;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly as UnitPath = ['/etc/systemd/system.control', '/run/systemd/system.control', '/run/systemd/transient', '/run/systemd/generator.early', '/etc/systemd/system', '/etc/systemd/system.attached', '/run/systemd/system', '/run/systemd/system.attached', '/run/systemd/generator', '/usr/local/lib/systemd/system', '/usr/lib/systemd/system', '/run/systemd/generator.late'];
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s DefaultStandardOutput = 'journal';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s DefaultStandardError = 'inherit';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s WatchdogDevice = '';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly t WatchdogLastPingTimestamp = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly t WatchdogLastPingTimestampMonotonic = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      @org.freedesktop.systemd1.Privileged("true")
      readwrite t RuntimeWatchdogUSec = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      @org.freedesktop.systemd1.Privileged("true")
      readwrite t RuntimeWatchdogPreUSec = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      @org.freedesktop.systemd1.Privileged("true")
      readwrite s RuntimeWatchdogPreGovernor = '';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      @org.freedesktop.systemd1.Privileged("true")
      readwrite t RebootWatchdogUSec = 600000000;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      @org.freedesktop.systemd1.Privileged("true")
      readwrite t KExecWatchdogUSec = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      @org.freedesktop.systemd1.Privileged("true")
      readwrite b ServiceWatchdogs = true;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly s ControlGroup = '';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly s SystemState = 'degraded';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly y ExitCode = 0x00;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultTimerAccuracyUSec = 60000000;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultTimeoutStartUSec = 45000000;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultTimeoutStopUSec = 45000000;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly t DefaultTimeoutAbortUSec = 45000000;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultDeviceTimeoutUSec = 45000000;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultRestartUSec = 100000;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultStartLimitIntervalUSec = 10000000;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly u DefaultStartLimitBurst = 5;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly b DefaultCPUAccounting = true;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly b DefaultBlockIOAccounting = false;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly b DefaultMemoryAccounting = true;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly b DefaultTasksAccounting = true;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitCPU = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitCPUSoft = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitFSIZE = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitFSIZESoft = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitDATA = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitDATASoft = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitSTACK = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitSTACKSoft = 8388608;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitCORE = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitCORESoft = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitRSS = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitRSSSoft = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitNOFILE = 524288;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitNOFILESoft = 1024;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitAS = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitASSoft = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitNPROC = 61134;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitNPROCSoft = 61134;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitMEMLOCK = 8388608;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitMEMLOCKSoft = 8388608;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitLOCKS = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitLOCKSSoft = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitSIGPENDING = 61134;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitSIGPENDINGSoft = 61134;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitMSGQUEUE = 819200;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitMSGQUEUESoft = 819200;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitNICE = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitNICESoft = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitRTPRIO = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitRTPRIOSoft = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitRTTIME = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t DefaultLimitRTTIMESoft = 18446744073709551615;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
      readonly t DefaultTasksMax = 18340;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly t TimerSlackNSec = 50000;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s DefaultOOMPolicy = 'stop';
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly i DefaultOOMScoreAdjust = 0;
      @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
      readonly s CtrlAltDelBurstAction = 'reboot-force';
  };
  node unit {
  };
  node job {
  };
};
